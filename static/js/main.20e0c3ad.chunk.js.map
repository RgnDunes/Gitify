{"version":3,"sources":["component/Avatar.js","component/ScrollMessage.js","component/UserDetails.js","component/repoSection/PublicRepo/PublicRepo.js","component/repoSection/ForkRepo/ForkRepo.js","component/repoSection/RepoSection.js","App.js","reportWebVitals.js","index.js"],"names":["Avatar","props","className","src","this","avatar_url","alt","Component","ScrollMessage","Message","floating","size","UserDetails","date","created_at","substring","name","username","followersCount","followers","followingCount","following","company","location","href","githubUrl","PublicRepo","fetchPublicApiUrl","a","url","fetch","then","res","json","result","setState","repos","console","log","error","state","description","map","home","fork","html_url","extractDate","default_branch","extractDescription","id","ForkRepo","fetchForkApiUrl","RepoSection","Grid","columns","padded","Column","App","fetchUrl","showDetails","login","followers_url","following_url","subscriptions_url","repos_url","blog","email","bio","twitter_username","public_repos","localStorage","setItem","catch","window","detailsSection","scroll","Button","color","onClick","getItem","negative","Header","Icon","disabled","Input","value","icon","inverted","circular","link","onChange","e","target","placeholder","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.20e0c3ad.chunk.js","sourcesContent":["import React, {Component} from 'react'\nimport './Avatar.css'\n\nexport default class Avatar extends Component{\n    constructor(props) \n    {\n        super(props);\n    }\n    render(){\n        return(\n            <img className=\"avatar-img\" src={this.props.avatar_url} alt=\"Avatar\"></img>\n        );\n    }\n}\n","import { Message } from 'semantic-ui-react'\nimport React, {Component} from 'react'\nimport './ScrollMessage.css'\n\nexport default class ScrollMessage extends Component{\n    constructor(props) \n    {\n        super(props);\n    }\n    render(){\n        return(\n            <Message className=\"scroll-message\" floating size='small'>Please Scroll Down !</Message>\n        );\n    }\n}\n","import React, {Component} from 'react'\nimport './UserDetails.css'\n\nexport default class UserDetails extends Component{\n    constructor(props) \n    {\n        super(props);\n    }\n    render(){\n        const date = this.props.created_at.substring(0,10);\n        const name = this.props.name  ? this.props.name : this.props.username;\n        const followersCount = this.props.followers ? this.props.followers : \"NA\";\n        const followingCount = this.props.following ? this.props.following : \"NA\";\n        const company = this.props.company ? this.props.company : \"NA\";\n        const location = this.props.location ? this.props.location : \"NA\";\n        return(\n            <div className=\"userDetails\">\n                <p className=\"userName\"><span className=\"divider\">-</span><a href={this.props.githubUrl}>{name}</a></p>\n                <p className=\"joiningDate\"><span className=\"divider\">-</span>Joined on <span className=\"date\">{date}</span></p>\n                <p className=\"jobTitle\"><span className=\"divider\">-</span>Working as <span className=\"company\">{company}</span> and living in <span className=\"location\">{location}</span></p>\n                <p className=\"followTitle\"><span className=\"divider\">-</span>Followers : <span className=\"followCount\"> {followersCount} </span> <span className=\"divider\"> | </span> <span className=\"divider\">-</span>Following : <span className=\"followCount\"> {followingCount} </span></p>\n            </div>\n        );\n    }\n}\n","import React, {Component} from 'react'\nimport './PublicRepo.css'\n\nexport default class PublicRepo extends Component{\n    constructor(props) \n    {\n      super(props);\n      this.state = {\n        repos : []\n      }\n    }\n\n    componentDidMount(){\n      this.fetchPublicApiUrl();\n    }\n\n    fetchPublicApiUrl = async () => {\n        var url = \"https://api.github.com/users/\"+this.props.username+\"/repos\";\n        await fetch(url)\n          .then(res => res.json())\n          .then(\n            (result) => {\n              this.setState({\n                repos : result\n              });\n              console.log(\"PUBLIC REPO FETCH SUCCESSFULL\");\n            },\n            (error) => {\n              console.log(\"PUBLIC REPO FETCH FAILED : \",error);\n            }\n          )\n      }\n\n      extractDate(date){\n        return date.substring(0,10);\n      }\n\n      extractDescription(description){\n        return description ? (<p className=\"publicRepoDescription\">Description : <span className=\"publicRepoDescriptionContent\"> {description} </span></p>) : \"\";\n      }\n\n    render(){\n        return(\n            <div>\n              <div className=\"publicRepo\">Public Repositories</div>\n              {this.state.repos.map(home => \n                <p>\n                  {home.fork ? \"\" : (\n                    <div key={home.id} className=\"row\">\n                      <p className=\"repoName\">\n                        <a href={home.html_url}>{home.name}</a>\n                      </p>\n                      <p className=\"createdAt\">\n                        Created on <span className=\"publicRepoDate\"> {this.extractDate(home.created_at)}</span> <span className=\"divider\"> | </span> Size : <span className=\"publicRepoSize\">{home.size} KB</span> <span className=\"divider\"> | </span> Default Branch : <span className=\"publicRepoDefaultBranch\"> {home.default_branch} </span>\n                      </p>\n                        {this.extractDescription(home.description)}\n                    </div>\n                  )}\n                </p>\n              )}\n            </div>\n        );\n    }\n}","import React, {Component} from 'react'\nimport './ForkRepo.css'\n\nexport default class ForkRepo extends Component{\n    constructor(props) \n    {\n      super(props);\n      this.state = {\n        repos : []\n      }\n    }\n\n    componentDidMount(){\n      this.fetchForkApiUrl();\n    }\n\n    fetchForkApiUrl = async () => {\n        var url = \"https://api.github.com/users/\"+this.props.username+\"/repos\";\n        await fetch(url)\n          .then(res => res.json())\n          .then(\n            (result) => {\n              this.setState({\n                repos : result\n              });\n              console.log(\"FORK REPO FETCH SUCCESSFULL\");\n            },\n            (error) => {\n              console.log(\"FORK REPO FETCH FAILED : \",error);\n            }\n          )\n      }\n\n      extractDate(date){\n        return date.substring(0,10);\n      }\n\n      extractDescription(description){\n        return description ? (<p className=\"forkRepoDescription\">Description : <span className=\"forkRepoDescriptionContent\"> {description} </span></p>) : \"\";\n      }\n\n    render(){\n        return(\n            <div>\n              <div className=\"forkRepo\">Forked Repositories</div>\n              {this.state.repos.map(home => \n                <p>\n                  {home.fork ? (\n                    <div key={home.id} className=\"row\">\n                      <p className=\"repoName\">\n                        <a href={home.html_url}>{home.name}</a>\n                      </p>\n                      <p className=\"createdAt\">\n                        Created on <span className=\"publicRepoDate\"> {this.extractDate(home.created_at)}</span> <span className=\"divider\"> | </span> Size : <span className=\"publicRepoSize\">{home.size} KB</span> <span className=\"divider\"> | </span> Default Branch : <span className=\"publicRepoDefaultBranch\"> {home.default_branch} </span>\n                      </p>\n                        {this.extractDescription(home.description)}\n                    </div>\n                  ) : \"\"}\n                </p>\n              )}\n            </div>\n        );\n    }\n}","import React, {Component} from 'react'\nimport { Grid } from 'semantic-ui-react'\nimport PublicRepo from './PublicRepo/PublicRepo'\nimport ForkRepo from './ForkRepo/ForkRepo'\nimport './RepoSection.css'\n\nexport default class RepoSection extends Component{\n    constructor(props) \n    {\n      super(props);\n    }\n    render(){\n        return(\n            <div className=\"repoSection\">\n                <Grid columns={2} padded>\n                    <Grid.Column className=\"repoColumn1\">\n                        <PublicRepo username={this.props.username}/>\n                    </Grid.Column>\n                    <Grid.Column className=\"repoColumn2\">\n                        <ForkRepo username={this.props.username}/>\n                    </Grid.Column>\n                </Grid>\n            </div>\n        );\n    }\n}","import './App.css';\nimport { Icon, Input, Button, Message } from 'semantic-ui-react'\nimport React, {Component} from 'react';\nimport Avatar from './component/Avatar'\nimport ScrollMessage from './component/ScrollMessage'\nimport UserDetails from './component/UserDetails'\nimport RepoSection from './component/repoSection/RepoSection'\n\nvar username = \"\";\n\nclass App extends Component{\n    constructor() \n    {\n      super();\n      this.state = {\n        username : \"\",\n        showDetails : false,\n        login : \"\",\n        avatar_url : \"\",\n        html_url : \"\",\n        followers_url : \"\",\n        following_url : \"\",\n        subscriptions_url : \"\",\n        repos_url : \"\",\n        name : \"\",\n        company : \"\",\n        blog : \"\",\n        location : \"\",\n        email : \"\",\n        bio : \"\",\n        twitter_username : \"\",\n        public_repos : 0,\n        followers : 0,\n        following : 0, \n        created_at : \"\",\n      }\n    }\n\n    fetchUrl = async () => {\n        var url = \"https://api.github.com/users/\"+this.state.username;\n        await fetch(url)\n          .then(res => res.json())\n          .then(\n            (result) => {\n              this.setState({\n                showDetails: true,\n                login : result['login'],\n                avatar_url : result['avatar_url'],\n                html_url : result['html_url'],\n                followers_url : ['followers_url'],\n                following_url : result['following_url'],\n                subscriptions_url : result['subscriptions_url'],\n                repos_url : result['repos_url'],\n                name : result['name'],\n                company : result['company'],\n                blog : result['blog'],\n                location : result['location'],\n                email : result['email'],\n                bio : result['bio'],\n                twitter_username : result['twitter_username'],\n                public_repos : result['public_repos'],\n                followers : result['followers'],\n                following : result['following'],  \n                created_at : result['created_at'],\n              });\n              console.log(\"FETCH SUCCESSFULL\");\n              localStorage.setItem('usernameInvalid', false);\n            },\n            (error) => {\n              console.log(\"APP FETCH FAILED : \",error);\n            }\n          ).catch(function() {\n            localStorage.setItem('usernameInvalid', true);\n            window.location.href = window.location.href;\n        });\n      }\n\n    render(){\n      const handleMessage = (e) => {\n        username = e.target.value;\n        this.setState({username : username});\n      }\n\n        var detailsSection= \"\";\n        var scroll = \"\";\n        var invalidUsername = \"No github user exists with that username\";\n        if(this.state.showDetails)\n        {\n          scroll = <ScrollMessage/>;\n          detailsSection = (\n            <div>\n              <Avatar avatar_url={this.state.avatar_url}/><br/>\n              <UserDetails name={this.state.name} created_at={this.state.created_at} username={username} followers={this.state.followers} following={this.state.following} company={this.state.company} location={this.state.location} githubUrl={this.state.html_url}/>\n              <RepoSection username={username}/>\n            </div>\n          );\n        }\n\n        const resetData = () => {\n          console.log(\"RESET REQUEST ... \");\n          username = \"\";\n          this.setState({username : \"\"});\n          this.fetchUrl();\n        }\n        \n        return ( \n            <div className = \"App\" >\n                <header className = \"App-header\" >\n                  <div className=\"reset\">\n                    <Button color = 'red'  size = 'massive' onClick={ resetData }> Reset </Button> \n                  </div>\n                  <div className=\"usernameInvalid\">\n                  {localStorage.getItem('usernameInvalid')==true ? (\n                    <Message negative>\n                      <Message.Header>{invalidUsername}</Message.Header>\n                    </Message>\n                  ) : \"\"}\n                  </div>\n                  \n                  <div className=\"fetchForm\">\n                    <a className = \"App-name\" href = \"#\">Gitify </a>\n                    <br/> <br/>\n                    <Icon disabled name = 'github' size = 'massive'/> \n                    < br/>\n                    <Input className = \"App-input\" value={username} icon = { < Icon name = 'search' inverted circular link/>} onChange = { handleMessage } placeholder = 'Github Username' size = 'mini' />\n                    <Button color = 'green' size = 'massive' onClick={ this.fetchUrl }> Gitify </Button> \n                    {scroll}\n                  </div>          \n                    <div className=\"detailsSection\">\n                      {detailsSection}\n                    </div>       \n                </header> \n            </div>\n        );\n    }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'semantic-ui-css/semantic.min.css';\n\nReactDOM.render( <\n    React.StrictMode >\n    <\n    App / >\n    <\n    /React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}