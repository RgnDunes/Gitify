{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/divyansh/Desktop/current workspace/Gitify/src/component/repoSection/ForkRepo/ForkRepo.js\";\nimport React, { Component } from 'react';\nimport './PublicRepo.css';\nexport default class ForkRepo extends Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchForkApiUrl = async () => {\n      var url = \"https://api.github.com/users/\" + this.props.username + \"/repos\";\n      await fetch(url).then(res => res.json()).then(result => {\n        this.setState({\n          repos: result\n        });\n        console.log(\"FORK REPO FETCH SUCCESSFULL\");\n      }, error => {\n        console.log(\"FORK REPO FETCH FAILED : \", error);\n      });\n    };\n\n    this.state = {\n      repos: []\n    };\n  }\n\n  componentDidMount() {\n    this.fetchForkApiUrl();\n  }\n\n  extractDate(date) {\n    return date.substring(0, 10);\n  }\n\n  extractDescription(description) {\n    return description ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"forkRepoDescription\",\n      children: [\"Description : \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"forkRepoDescriptionContent\",\n        children: [\" \", description, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 80\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 31\n    }, this) : \"\";\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"forkRepo\",\n        children: \"Forked Repositories\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 15\n      }, this), this.state.repos.map(home => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: home.fork ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"repoName\",\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: home.html_url,\n              children: home.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"createdAt\",\n            children: [\"Created on \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"publicRepoDate\",\n              children: [\" \", this.extractDate(home.created_at)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 36\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"divider\",\n              children: \" | \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 113\n            }, this), \" Size : \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"publicRepoSize\",\n              children: [home.size, \" KB\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 157\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"divider\",\n              children: \" | \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 212\n            }, this), \" Default Branch : \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"publicRepoDefaultBranch\",\n              children: [\" \", home.default_branch, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 266\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 23\n          }, this), this.extractDescription(home.description)]\n        }, home.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this) : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/divyansh/Desktop/current workspace/Gitify/src/component/repoSection/ForkRepo/ForkRepo.js"],"names":["React","Component","ForkRepo","constructor","props","fetchForkApiUrl","url","username","fetch","then","res","json","result","setState","repos","console","log","error","state","componentDidMount","extractDate","date","substring","extractDescription","description","render","map","home","fork","html_url","name","created_at","size","default_branch","id"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,kBAAP;AAEA,eAAe,MAAMC,QAAN,SAAuBD,SAAvB,CAAgC;AAC3CE,EAAAA,WAAW,CAACC,KAAD,EACX;AACE,UAAMA,KAAN;;AADF,SAWAC,eAXA,GAWkB,YAAY;AAC1B,UAAIC,GAAG,GAAG,kCAAgC,KAAKF,KAAL,CAAWG,QAA3C,GAAoD,QAA9D;AACA,YAAMC,KAAK,CAACF,GAAD,CAAL,CACHG,IADG,CACEC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADT,EAEHF,IAFG,CAGDG,MAAD,IAAY;AACV,aAAKC,QAAL,CAAc;AACZC,UAAAA,KAAK,EAAGF;AADI,SAAd;AAGAG,QAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACD,OARC,EASDC,KAAD,IAAW;AACTF,QAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAwCC,KAAxC;AACD,OAXC,CAAN;AAaD,KA1BH;;AAEE,SAAKC,KAAL,GAAa;AACXJ,MAAAA,KAAK,EAAG;AADG,KAAb;AAGD;;AAEDK,EAAAA,iBAAiB,GAAE;AACjB,SAAKd,eAAL;AACD;;AAmBCe,EAAAA,WAAW,CAACC,IAAD,EAAM;AACf,WAAOA,IAAI,CAACC,SAAL,CAAe,CAAf,EAAiB,EAAjB,CAAP;AACD;;AAEDC,EAAAA,kBAAkB,CAACC,WAAD,EAAa;AAC7B,WAAOA,WAAW,gBAAI;AAAG,MAAA,SAAS,EAAC,qBAAb;AAAA,gDAAiD;AAAM,QAAA,SAAS,EAAC,4BAAhB;AAAA,wBAA+CA,WAA/C;AAAA;AAAA;AAAA;AAAA;AAAA,cAAjD;AAAA;AAAA;AAAA;AAAA;AAAA,YAAJ,GAAgI,EAAlJ;AACD;;AAEHC,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEG,KAAKP,KAAL,CAAWJ,KAAX,CAAiBY,GAAjB,CAAqBC,IAAI,iBACxB;AAAA,kBACGA,IAAI,CAACC,IAAL,gBACC;AAAmB,UAAA,SAAS,EAAC,KAA7B;AAAA,kCACE;AAAG,YAAA,SAAS,EAAC,UAAb;AAAA,mCACE;AAAG,cAAA,IAAI,EAAED,IAAI,CAACE,QAAd;AAAA,wBAAyBF,IAAI,CAACG;AAA9B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE;AAAG,YAAA,SAAS,EAAC,WAAb;AAAA,mDACa;AAAM,cAAA,SAAS,EAAC,gBAAhB;AAAA,8BAAmC,KAAKV,WAAL,CAAiBO,IAAI,CAACI,UAAtB,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA,oBADb,oBAC0F;AAAM,cAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAD1F,2BACsI;AAAM,cAAA,SAAS,EAAC,gBAAhB;AAAA,yBAAkCJ,IAAI,CAACK,IAAvC;AAAA;AAAA;AAAA;AAAA;AAAA,oBADtI,oBAC6L;AAAM,cAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAD7L,qCACmP;AAAM,cAAA,SAAS,EAAC,yBAAhB;AAAA,8BAA4CL,IAAI,CAACM,cAAjD;AAAA;AAAA;AAAA;AAAA;AAAA,oBADnP;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,EAOK,KAAKV,kBAAL,CAAwBI,IAAI,CAACH,WAA7B,CAPL;AAAA,WAAUG,IAAI,CAACO,EAAf;AAAA;AAAA;AAAA;AAAA,gBADD,GAUG;AAXN;AAAA;AAAA;AAAA;AAAA,cADD,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAoBH;;AA3D0C","sourcesContent":["import React, {Component} from 'react'\nimport './PublicRepo.css'\n\nexport default class ForkRepo extends Component{\n    constructor(props) \n    {\n      super(props);\n      this.state = {\n        repos : []\n      }\n    }\n\n    componentDidMount(){\n      this.fetchForkApiUrl();\n    }\n\n    fetchForkApiUrl = async () => {\n        var url = \"https://api.github.com/users/\"+this.props.username+\"/repos\";\n        await fetch(url)\n          .then(res => res.json())\n          .then(\n            (result) => {\n              this.setState({\n                repos : result\n              });\n              console.log(\"FORK REPO FETCH SUCCESSFULL\");\n            },\n            (error) => {\n              console.log(\"FORK REPO FETCH FAILED : \",error);\n            }\n          )\n      }\n\n      extractDate(date){\n        return date.substring(0,10);\n      }\n\n      extractDescription(description){\n        return description ? (<p className=\"forkRepoDescription\">Description : <span className=\"forkRepoDescriptionContent\"> {description} </span></p>) : \"\";\n      }\n\n    render(){\n        return(\n            <div>\n              <div className=\"forkRepo\">Forked Repositories</div>\n              {this.state.repos.map(home => \n                <p>\n                  {home.fork ? (\n                    <div key={home.id} className=\"row\">\n                      <p className=\"repoName\">\n                        <a href={home.html_url}>{home.name}</a>\n                      </p>\n                      <p className=\"createdAt\">\n                        Created on <span className=\"publicRepoDate\"> {this.extractDate(home.created_at)}</span> <span className=\"divider\"> | </span> Size : <span className=\"publicRepoSize\">{home.size} KB</span> <span className=\"divider\"> | </span> Default Branch : <span className=\"publicRepoDefaultBranch\"> {home.default_branch} </span>\n                      </p>\n                        {this.extractDescription(home.description)}\n                    </div>\n                  ) : \"\"}\n                </p>\n              )}\n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}