{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/divyansh/Desktop/current workspace/Gitify/src/App.js\";\nimport './App.css';\nimport { Icon, Input, Button } from 'semantic-ui-react';\nimport React, { Component } from 'react';\nimport Avatar from './component/Avatar';\nimport ScrollMessage from './component/ScrollMessage';\nimport UserDetails from './component/UserDetails';\nimport RepoSection from './component/repoSection/RepoSection';\nvar username = \"\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.fetchUrl = async () => {\n      var url = \"https://api.github.com/users/\" + username;\n      await fetch(url).then(res => res.json()).then(result => {\n        this.setState({\n          showDetails: true,\n          login: result['login'],\n          avatar_url: result['avatar_url'],\n          html_url: result['html_url'],\n          followers_url: ['followers_url'],\n          following_url: result['following_url'],\n          subscriptions_url: result['subscriptions_url'],\n          repos_url: result['repos_url'],\n          name: result['name'],\n          company: result['company'],\n          blog: result['blog'],\n          location: result['location'],\n          email: result['email'],\n          bio: result['bio'],\n          twitter_username: result['twitter_username'],\n          public_repos: result['public_repos'],\n          followers: result['followers'],\n          following: result['following'],\n          created_at: result['created_at']\n        });\n        console.log(\"FETCH SUCCESSFULL\");\n      }, error => {\n        console.log(\"FETCH FAILED : \", error);\n      });\n    };\n\n    this.handleMessage = e => {\n      username = e.target.value;\n    };\n\n    this.state = {\n      showDetails: false,\n      login: \"\",\n      avatar_url: \"\",\n      html_url: \"\",\n      followers_url: \"\",\n      following_url: \"\",\n      subscriptions_url: \"\",\n      repos_url: \"\",\n      name: \"\",\n      company: \"\",\n      blog: \"\",\n      location: \"\",\n      email: \"\",\n      bio: \"\",\n      twitter_username: \"\",\n      public_repos: 0,\n      followers: 0,\n      following: 0,\n      created_at: \"\"\n    };\n  }\n\n  render() {\n    const {\n      visible\n    } = this.state;\n    var detailsSection = \"\";\n    var scroll = \"\";\n\n    if (this.state.showDetails) {\n      scroll = /*#__PURE__*/_jsxDEV(ScrollMessage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 20\n      }, this);\n      detailsSection = /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          avatar_url: this.state.avatar_url\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 59\n        }, this), /*#__PURE__*/_jsxDEV(UserDetails, {\n          name: this.state.name,\n          created_at: this.state.created_at,\n          username: username,\n          followers: this.state.followers,\n          following: this.state.following,\n          company: this.state.company,\n          location: this.state.location,\n          githubUrl: this.state.html_url\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"fetchForm\",\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            className: \"App-name\",\n            href: \"#\",\n            children: \"Gitify \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 21\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(Icon, {\n            disabled: true,\n            name: \"github\",\n            size: \"massive\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            className: \"App-input\",\n            icon: /*#__PURE__*/_jsxDEV(Icon, {\n              name: \"search\",\n              inverted: true,\n              circular: true,\n              link: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 61\n            }, this),\n            onChange: this.handleMessage,\n            placeholder: \"Github Username\",\n            size: \"mini\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            color: \"green\",\n            size: \"massive\",\n            onClick: this.fetchUrl,\n            children: \" Gitify \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 21\n          }, this), scroll]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"detailsSection\",\n          children: detailsSection\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/divyansh/Desktop/current workspace/Gitify/src/App.js"],"names":["Icon","Input","Button","React","Component","Avatar","ScrollMessage","UserDetails","RepoSection","username","App","constructor","fetchUrl","url","fetch","then","res","json","result","setState","showDetails","login","avatar_url","html_url","followers_url","following_url","subscriptions_url","repos_url","name","company","blog","location","email","bio","twitter_username","public_repos","followers","following","created_at","console","log","error","handleMessage","e","target","value","state","render","visible","detailsSection","scroll"],"mappings":"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","sourcesContent":["import './App.css';\nimport { Icon, Input, Button } from 'semantic-ui-react'\nimport React, {Component} from 'react';\nimport Avatar from './component/Avatar'\nimport ScrollMessage from './component/ScrollMessage'\nimport UserDetails from './component/UserDetails'\nimport RepoSection from './component/repoSection/RepoSection'\n\nvar username = \"\";\n\nclass App extends Component{\n    constructor() \n    {\n      super();\n      this.state = {\n        showDetails : false,\n        login : \"\",\n        avatar_url : \"\",\n        html_url : \"\",\n        followers_url : \"\",\n        following_url : \"\",\n        subscriptions_url : \"\",\n        repos_url : \"\",\n        name : \"\",\n        company : \"\",\n        blog : \"\",\n        location : \"\",\n        email : \"\",\n        bio : \"\",\n        twitter_username : \"\",\n        public_repos : 0,\n        followers : 0,\n        following : 0, \n        created_at : \"\",\n      }\n    }\n\n    fetchUrl = async () => {\n        var url = \"https://api.github.com/users/\"+username;\n        await fetch(url)\n          .then(res => res.json())\n          .then(\n            (result) => {\n              this.setState({\n                showDetails: true,\n                login : result['login'],\n                avatar_url : result['avatar_url'],\n                html_url : result['html_url'],\n                followers_url : ['followers_url'],\n                following_url : result['following_url'],\n                subscriptions_url : result['subscriptions_url'],\n                repos_url : result['repos_url'],\n                name : result['name'],\n                company : result['company'],\n                blog : result['blog'],\n                location : result['location'],\n                email : result['email'],\n                bio : result['bio'],\n                twitter_username : result['twitter_username'],\n                public_repos : result['public_repos'],\n                followers : result['followers'],\n                following : result['following'],  \n                created_at : result['created_at'],\n              });\n              console.log(\"FETCH SUCCESSFULL\");\n            },\n            (error) => {\n              console.log(\"FETCH FAILED : \",error);\n            }\n          )\n      }\n\n    handleMessage = (e) => {\n        username = e.target.value;\n    }\n\n    render(){\n      const { visible } = this.state\n        var detailsSection= \"\";\n        var scroll = \"\";\n        if(this.state.showDetails)\n        {\n          scroll = <ScrollMessage/>;\n          detailsSection = (\n            <div>\n              <Avatar avatar_url={this.state.avatar_url}/><br/>\n              <UserDetails name={this.state.name} created_at={this.state.created_at} username={username} followers={this.state.followers} following={this.state.following} company={this.state.company} location={this.state.location} githubUrl={this.state.html_url}/>\n            </div>\n          );\n            \n        }\n        \n        return ( \n            <div className = \"App\" >\n                <header className = \"App-header\" >\n                  <div className=\"fetchForm\">\n                    <a className = \"App-name\" href = \"#\">Gitify </a>\n                    <br/> <br/>\n                    <Icon disabled name = 'github' size = 'massive'/> \n                    < br/>\n                    <Input className = \"App-input\" icon = { < Icon name = 'search' inverted circular link/>} onChange = { this.handleMessage } placeholder = 'Github Username' size = 'mini' />\n                    <Button color = 'green' size = 'massive' onClick={ this.fetchUrl }> Gitify </Button> \n                    {scroll}\n                  </div>          \n                    <div className=\"detailsSection\">\n                      {detailsSection}\n                    </div>       \n                </header> \n            </div>\n        );\n    }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}