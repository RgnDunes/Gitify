{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/divyansh/Desktop/current workspace/Gitify/src/utils/fetch.js\";\nimport React, { Component } from 'react';\nimport { username } from '../App';\nimport { AvatarCircular } from '../components/avatar';\nexport var showDetails = false;\nexport default class Fetch extends Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchUrl = () => {\n      fetch(\"https://api.github.com/users/\" + {\n        username\n      }).then(res => res.json()).then(result => {\n        showDetails = true;\n        console.log(result);\n        this.setState({\n          login: result['login'],\n          avatar_url: result['avatar_url'],\n          html_url: result['html_url'],\n          followers_url: ['followers_url'],\n          following_url: result['following_url'],\n          subscriptions_url: result['subscriptions_url'],\n          repos_url: result['repos_url'],\n          name: result['name'],\n          company: result['company'],\n          blog: result['blog'],\n          location: result['location'],\n          email: result['email'],\n          bio: result['bio'],\n          twitter_username: result['twitter_username'],\n          public_repos: result['public_repos'],\n          followers: result['followers'],\n          following: result['following']\n        });\n      }, error => {\n        console.log(error);\n      });\n    };\n\n    this.state = {\n      login: \"\",\n      avatar_url: \"\",\n      html_url: \"\",\n      followers_url: \"\",\n      following_url: \"\",\n      subscriptions_url: \"\",\n      repos_url: \"\",\n      name: \"\",\n      company: \"\",\n      blog: \"\",\n      location: \"\",\n      email: \"\",\n      bio: \"\",\n      twitter_username: \"\",\n      public_repos: 0,\n      followers: 0,\n      following: 0\n    };\n  }\n\n  render() {\n    this.fetchUrl();\n    return /*#__PURE__*/_jsxDEV(AvatarCircular, {\n      avatar: this.state.avatar_url\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/divyansh/Desktop/current workspace/Gitify/src/utils/fetch.js"],"names":["React","Component","username","AvatarCircular","showDetails","Fetch","constructor","props","fetchUrl","fetch","then","res","json","result","console","log","setState","login","avatar_url","html_url","followers_url","following_url","subscriptions_url","repos_url","name","company","blog","location","email","bio","twitter_username","public_repos","followers","following","error","state","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,QAAT,QAAyB,QAAzB;AACA,SAAQC,cAAR,QAA6B,sBAA7B;AAEA,OAAO,IAAIC,WAAW,GAAG,KAAlB;AAEP,eAAe,MAAMC,KAAN,SAAoBJ,SAApB,CAA6B;AAE1CK,EAAAA,WAAW,CAACC,KAAD,EACX;AACE,UAAMA,KAAN;;AADF,SAuBAC,QAvBA,GAuBW,MAAM;AACfC,MAAAA,KAAK,CAAC,kCAAgC;AAACP,QAAAA;AAAD,OAAjC,CAAL,CACGQ,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAGKG,MAAD,IAAY;AACVT,QAAAA,WAAW,GAAG,IAAd;AACAU,QAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,aAAKG,QAAL,CAAc;AACZC,UAAAA,KAAK,EAAGJ,MAAM,CAAC,OAAD,CADF;AAEZK,UAAAA,UAAU,EAAGL,MAAM,CAAC,YAAD,CAFP;AAGZM,UAAAA,QAAQ,EAAGN,MAAM,CAAC,UAAD,CAHL;AAIZO,UAAAA,aAAa,EAAG,CAAC,eAAD,CAJJ;AAKZC,UAAAA,aAAa,EAAGR,MAAM,CAAC,eAAD,CALV;AAMZS,UAAAA,iBAAiB,EAAGT,MAAM,CAAC,mBAAD,CANd;AAOZU,UAAAA,SAAS,EAAGV,MAAM,CAAC,WAAD,CAPN;AAQZW,UAAAA,IAAI,EAAGX,MAAM,CAAC,MAAD,CARD;AASZY,UAAAA,OAAO,EAAGZ,MAAM,CAAC,SAAD,CATJ;AAUZa,UAAAA,IAAI,EAAGb,MAAM,CAAC,MAAD,CAVD;AAWZc,UAAAA,QAAQ,EAAGd,MAAM,CAAC,UAAD,CAXL;AAYZe,UAAAA,KAAK,EAAGf,MAAM,CAAC,OAAD,CAZF;AAaZgB,UAAAA,GAAG,EAAGhB,MAAM,CAAC,KAAD,CAbA;AAcZiB,UAAAA,gBAAgB,EAAGjB,MAAM,CAAC,kBAAD,CAdb;AAeZkB,UAAAA,YAAY,EAAGlB,MAAM,CAAC,cAAD,CAfT;AAgBZmB,UAAAA,SAAS,EAAGnB,MAAM,CAAC,WAAD,CAhBN;AAiBZoB,UAAAA,SAAS,EAAGpB,MAAM,CAAC,WAAD;AAjBN,SAAd;AAmBD,OAzBL,EA0BKqB,KAAD,IAAW;AACTpB,QAAAA,OAAO,CAACC,GAAR,CAAYmB,KAAZ;AACD,OA5BL;AA8BD,KAtDD;;AAEE,SAAKC,KAAL,GAAa;AACXlB,MAAAA,KAAK,EAAG,EADG;AAEXC,MAAAA,UAAU,EAAG,EAFF;AAGXC,MAAAA,QAAQ,EAAG,EAHA;AAIXC,MAAAA,aAAa,EAAG,EAJL;AAKXC,MAAAA,aAAa,EAAG,EALL;AAMXC,MAAAA,iBAAiB,EAAG,EANT;AAOXC,MAAAA,SAAS,EAAG,EAPD;AAQXC,MAAAA,IAAI,EAAG,EARI;AASXC,MAAAA,OAAO,EAAG,EATC;AAUXC,MAAAA,IAAI,EAAG,EAVI;AAWXC,MAAAA,QAAQ,EAAG,EAXA;AAYXC,MAAAA,KAAK,EAAG,EAZG;AAaXC,MAAAA,GAAG,EAAG,EAbK;AAcXC,MAAAA,gBAAgB,EAAG,EAdR;AAeXC,MAAAA,YAAY,EAAG,CAfJ;AAgBXC,MAAAA,SAAS,EAAG,CAhBD;AAiBXC,MAAAA,SAAS,EAAG;AAjBD,KAAb;AAmBD;;AAkCDG,EAAAA,MAAM,GAAE;AACN,SAAK5B,QAAL;AACA,wBACE,QAAC,cAAD;AAAgB,MAAA,MAAM,EAAE,KAAK2B,KAAL,CAAWjB;AAAnC;AAAA;AAAA;AAAA;AAAA,YADF;AAGD;;AA/DyC","sourcesContent":["import React, {Component} from 'react'\nimport { username } from '../App';\nimport {AvatarCircular} from '../components/avatar';\n\nexport var showDetails = false;\n\nexport default class Fetch extends Component{\n\n  constructor(props) \n  {\n    super(props);\n    this.state = {\n      login : \"\",\n      avatar_url : \"\",\n      html_url : \"\",\n      followers_url : \"\",\n      following_url : \"\",\n      subscriptions_url : \"\",\n      repos_url : \"\",\n      name : \"\",\n      company : \"\",\n      blog : \"\",\n      location : \"\",\n      email : \"\",\n      bio : \"\",\n      twitter_username : \"\",\n      public_repos : 0,\n      followers : 0,\n      following : 0, \n    }\n  }\n\n  fetchUrl = () => {\n    fetch(\"https://api.github.com/users/\"+{username})\n      .then(res => res.json())\n      .then(\n        (result) => {\n          showDetails = true;\n          console.log(result);\n          this.setState({\n            login : result['login'],\n            avatar_url : result['avatar_url'],\n            html_url : result['html_url'],\n            followers_url : ['followers_url'],\n            following_url : result['following_url'],\n            subscriptions_url : result['subscriptions_url'],\n            repos_url : result['repos_url'],\n            name : result['name'],\n            company : result['company'],\n            blog : result['blog'],\n            location : result['location'],\n            email : result['email'],\n            bio : result['bio'],\n            twitter_username : result['twitter_username'],\n            public_repos : result['public_repos'],\n            followers : result['followers'],\n            following : result['following'],  \n          });\n        },\n        (error) => {\n          console.log(error);\n        }\n      )\n  }\n  render(){\n    this.fetchUrl();\n    return(\n      <AvatarCircular avatar={this.state.avatar_url}/>\n    );\n  }\n}\n\n\n"]},"metadata":{},"sourceType":"module"}